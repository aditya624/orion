name: Build & Push to Docker Hub

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '**/*.py'
      - 'pyproject.toml'
      - '.github/workflows/dockerhub.yml'
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/orion

permissions:
  contents: read
  packages: read

concurrency:
  group: dockerhub-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read version from pyproject.toml
        id: get_version
        shell: bash
        run: |
          python - <<'PY' > /tmp/out.txt
          import sys, pathlib
          try:
              import tomllib  # Python 3.11+
          except ModuleNotFoundError:
              print("Python 3.11+ required for tomllib", file=sys.stderr); sys.exit(1)
          data = tomllib.loads(pathlib.Path("pyproject.toml").read_text(encoding="utf-8"))
          v = (data.get("project") or {}).get("version")
          if not v:
              v = ((data.get("tool") or {}).get("poetry") or {}).get("version")
          if not v:
              sys.exit("Version not found in pyproject.toml (expected 'project.version' or 'tool.poetry.version').")
          print(f"version={v}")
          PY
          cat /tmp/out.txt >> "$GITHUB_OUTPUT"
      - name: Show version
        run: echo "Version from pyproject.toml = ${{ steps.get_version.outputs.version }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Optional: tetap pakai metadata-action untuk labels (bukan untuk tags)
      - name: Extract labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.version=${{ steps.get_version.outputs.version }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            docker.io/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Post summary
        run: |
          echo "âœ… Pushed to Docker Hub:" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- ${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
